# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-07-14 13:33
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.citext
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import trainer.models
import trainer.validators
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('trainer', '0054_trainer_trainer_code'),
    ]

    operations = [
        migrations.AlterField(
            model_name='trainer',
            name='currently_cheats',
            field=models.BooleanField(default=False, help_text='Do you still cheat?', verbose_name='Cheater'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='daily_goal',
            field=models.PositiveIntegerField(blank=True, help_text="Our Discord bot lets you know if you've reached you goals or not: How much XP do you aim to gain a day?", null=True, verbose_name='Rate Goal'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='faction',
            field=models.ForeignKey(default=0, help_text='Mystic = Blue, Instinct = Yellow, Valor = Red.', on_delete=django.db.models.deletion.SET_DEFAULT, to='trainer.Faction', verbose_name='Team'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='has_cheated',
            field=models.BooleanField(default=False, help_text='Have you cheated in the past?', verbose_name='Historic Cheater'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='last_cheated',
            field=models.DateField(blank=True, help_text='When did you last cheat?', null=True, verbose_name='Last Cheated'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='leaderboard_country',
            field=models.ForeignKey(blank=True, help_text='Where are you based?', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_trainers_country', to=settings.CITIES_COUNTRY_MODEL, verbose_name='Country'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='leaderboard_region',
            field=models.ForeignKey(blank=True, help_text='Where are you based?', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_trainers_region', to='cities.Region', verbose_name='Region'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='start_date',
            field=models.DateField(blank=True, help_text='The date you created your Pokémon Go account.', null=True, validators=[trainer.validators.StartDateValidator], verbose_name='Start Date'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='statistics',
            field=models.BooleanField(default=True, help_text='Would you like to be shown on the leaderboard? Ticking this box gives us permission to process your data.', verbose_name='Statistics'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='total_goal',
            field=models.PositiveIntegerField(blank=True, help_text="Our Discord bot lets you know if you've reached you goals or not: How much XP are you aiming for next?", null=True, verbose_name='Reach Goal'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='trainer_code',
            field=models.CharField(blank=True, help_text='Fancy sharing your trainer code? (Disclaimer: This information will be public)', max_length=15, null=True, validators=[trainer.validators.TrainerCodeValidator], verbose_name='Trainer Code'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='username',
            field=django.contrib.postgres.fields.citext.CICharField(help_text='Your Trainer Username exactly as is in game. You are free to change capitalisation but removal or addition of digits may prevent other Trainers with similar usernames from using this service and is against the Terms of Service.', max_length=15, unique=True, validators=[trainer.validators.PokemonGoUsernameValidator], verbose_name='Username'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='verification',
            field=models.ImageField(blank=True, null=True, upload_to=trainer.models.VerificationImagePath, verbose_name='Username / Level / Team Screenshot'),
        ),
        migrations.AlterField(
            model_name='update',
            name='battles_won',
            field=models.PositiveIntegerField(blank=True, help_text='Win 1,000 Gym battles.', null=True, verbose_name='Battle Girl'),
        ),
        migrations.AlterField(
            model_name='update',
            name='berry_fed',
            field=models.PositiveIntegerField(blank=True, help_text='Feed 1,000 Berries at Gyms.', null=True, verbose_name='Berry Master'),
        ),
        migrations.AlterField(
            model_name='update',
            name='big_magikarp',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 300 big Magikarp.', null=True, verbose_name='Fisherman'),
        ),
        migrations.AlterField(
            model_name='update',
            name='dex_caught',
            field=models.PositiveIntegerField(blank=True, help_text='In your Pokédex, how many differnt species have you caught? It should say at the top.', null=True, verbose_name='Species Caught'),
        ),
        migrations.AlterField(
            model_name='update',
            name='dex_seen',
            field=models.PositiveIntegerField(blank=True, help_text='In your Pokédex, how many differnt species have you seen? It should say at the top.', null=True, verbose_name='Species Seen'),
        ),
        migrations.AlterField(
            model_name='update',
            name='eggs_hatched',
            field=models.PositiveIntegerField(blank=True, help_text='Hatch 500 eggs.', null=True, verbose_name='Breeder'),
        ),
        migrations.AlterField(
            model_name='update',
            name='gen_1_dex',
            field=models.PositiveIntegerField(blank=True, help_text='Register 100 Kanto region Pokémon in the Pokédex.', null=True, verbose_name='Kanto'),
        ),
        migrations.AlterField(
            model_name='update',
            name='gen_2_dex',
            field=models.PositiveIntegerField(blank=True, help_text='Register 70 Pokémon first discovered in the Johto region to the Pokédex.', null=True, verbose_name='Johto'),
        ),
        migrations.AlterField(
            model_name='update',
            name='gen_3_dex',
            field=models.PositiveIntegerField(blank=True, help_text='Register 70 Pokémon first discovered in the Hoenn region to the Pokédex.', null=True, verbose_name='Hoenn'),
        ),
        migrations.AlterField(
            model_name='update',
            name='gym_badges',
            field=models.PositiveIntegerField(blank=True, help_text='Your gym badges map. Total number of gold, silver, bronze and blank combined. (This information is currently not used)', null=True, verbose_name='Total Gym Badges'),
        ),
        migrations.AlterField(
            model_name='update',
            name='gym_defended',
            field=models.PositiveIntegerField(blank=True, help_text='Defend Gyms for 1,000 hours.', null=True, verbose_name='Gym Leader'),
        ),
        migrations.AlterField(
            model_name='update',
            name='image_proof',
            field=models.ImageField(blank=True, null=True, upload_to=trainer.models.VerificationUpdateImagePath, verbose_name='Total XP Screenshot'),
        ),
        migrations.AlterField(
            model_name='update',
            name='leg_raids_completed',
            field=models.PositiveIntegerField(blank=True, help_text='Win 1,000 Legendary Raids.', null=True, verbose_name='Battle Legend'),
        ),
        migrations.AlterField(
            model_name='update',
            name='legacy_gym_trained',
            field=models.PositiveIntegerField(blank=True, help_text='Train 1,000 times.', null=True, verbose_name='Ace Trainer'),
        ),
        migrations.AlterField(
            model_name='update',
            name='max_friends',
            field=models.PositiveIntegerField(blank=True, help_text='Become Best Friends with 3 Trainers.', null=True, verbose_name='Idol'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pikachu_caught',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 300 Pikachu.', null=True, verbose_name='Pikachu Fan'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_bug',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Bug-type Pokémon', null=True, verbose_name='Bug Catcher'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_caught',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 2,000 Pokémon.', null=True, verbose_name='Collector'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_dark',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Dark-type Pokémon', null=True, verbose_name='Delinquent'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_dragon',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Dragon-type Pokémon', null=True, verbose_name='Dragon Tamer'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_electric',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Electric-type Pokémon', null=True, verbose_name='Rocker'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_evolved',
            field=models.PositiveIntegerField(blank=True, help_text='Evolve 200 Pokémon.', null=True, verbose_name='Scientist'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_fairy',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Fairy-type Pokémon', null=True, verbose_name='Fairy Tale Girl'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_fighting',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Fighting-type Pokémon', null=True, verbose_name='Black Belt'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_fire',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Fire-type Pokémon', null=True, verbose_name='Kindler'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_flying',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Flying-type Pokémon', null=True, verbose_name='Bird Keeper'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_ghost',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Ghost-type Pokémon', null=True, verbose_name='Hex Maniac'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_grass',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Grass-type Pokémon', null=True, verbose_name='Gardener'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_ground',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Ground-type Pokémon', null=True, verbose_name='Ruin Maniac'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_ice',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Ice-type Pokémon', null=True, verbose_name='Skier'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_normal',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Normal-type Pokémon', null=True, verbose_name='Schoolkid'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_poison',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Poison-type Pokémon', null=True, verbose_name='Punk Girl'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_psychic',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Pychic-type Pokémon', null=True, verbose_name='Psychic'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_rock',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Rock-type Pokémon', null=True, verbose_name='Hiker'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_steel',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Steel-type Pokémon', null=True, verbose_name='Depot Agent'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkmn_water',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 200 Water-type Pokémon', null=True, verbose_name='Swimmer'),
        ),
        migrations.AlterField(
            model_name='update',
            name='pkstops_spun',
            field=models.PositiveIntegerField(blank=True, help_text='Visit 2,000 PokéStops.', null=True, verbose_name='Backpacker'),
        ),
        migrations.AlterField(
            model_name='update',
            name='quests',
            field=models.PositiveIntegerField(blank=True, help_text='Complete 1,000 Field Research tasks.', null=True, verbose_name='Pokémon Ranger'),
        ),
        migrations.AlterField(
            model_name='update',
            name='raids_completed',
            field=models.PositiveIntegerField(blank=True, help_text='Win 1,000 Raids.', null=True, verbose_name='Champion'),
        ),
        migrations.AlterField(
            model_name='update',
            name='tiny_rattata',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 300 tiny Rattata.', null=True, verbose_name='Youngster'),
        ),
        migrations.AlterField(
            model_name='update',
            name='trading',
            field=models.PositiveIntegerField(blank=True, help_text='Trade 1,000 Pokémon.', null=True, verbose_name='Gentleman'),
        ),
        migrations.AlterField(
            model_name='update',
            name='trading_distance',
            field=models.PositiveIntegerField(blank=True, help_text='Earn 1,000,000 km across the distance of all Pokémon trades.', null=True, verbose_name='Pilot'),
        ),
        migrations.AlterField(
            model_name='update',
            name='unown_alphabet',
            field=models.PositiveIntegerField(blank=True, help_text='Catch 26 Unown.', null=True, verbose_name='Unown'),
        ),
        migrations.AlterField(
            model_name='update',
            name='walk_dist',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Walk 1,000km', max_digits=16, null=True, verbose_name='Jogger'),
        ),
        migrations.AlterField(
            model_name='update',
            name='xp',
            field=models.PositiveIntegerField(help_text='Your Total XP can be found at the bottom of your Pokémon Go profile', verbose_name='XP'),
        ),
    ]
