# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-09-16 14:13
from __future__ import unicode_literals

import colorful.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import trainer.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ban',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=140)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscordMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscordServer',
            fields=[
                ('name', models.CharField(max_length=256)),
                ('region', models.CharField(max_length=256)),
                ('id', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('icon', models.CharField(max_length=256)),
                ('bans_cheaters', models.BooleanField(default=True)),
                ('seg_cheaters', models.BooleanField(default=False)),
                ('bans_minors', models.BooleanField(default=False)),
                ('seg_minors', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DiscordUser',
            fields=[
                ('name', models.CharField(max_length=32)),
                ('discriminator', models.CharField(max_length=4)),
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('avatar_url', models.URLField()),
                ('creation', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ExtendedProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='extended_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='date of birth')),
            ],
        ),
        migrations.CreateModel(
            name='Faction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=140)),
                ('colour', colorful.fields.RGBColorField(blank=True, default='#929292', null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=trainer.models.factionImagePath)),
                ('leader_name', models.CharField(blank=True, max_length=140, null=True)),
                ('leader_image', models.ImageField(blank=True, null=True, upload_to=trainer.models.factionImagePath)),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('banned_users', models.ManyToManyField(related_name='banned_network_members', through='trainer.Ban', to='trainer.DiscordUser')),
                ('discord_servers', models.ManyToManyField(related_name='network_discord', to='trainer.DiscordServer')),
            ],
        ),
        migrations.CreateModel(
            name='NetworkMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join', models.DateTimeField(auto_now_add=True)),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.Network')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reporter', models.CharField(max_length=50)),
                ('reportee', models.CharField(max_length=50)),
                ('reason', models.CharField(max_length=256)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('start_date', models.DateField(blank=True, default=datetime.date(2016, 7, 13), null=True)),
                ('has_cheated', models.BooleanField(default=False)),
                ('last_cheated', models.DateField(blank=True, null=True)),
                ('currently_cheats', models.BooleanField(default=False)),
                ('statistics', models.BooleanField(default=True)),
                ('daily_goal', models.PositiveIntegerField(blank=True, null=True)),
                ('total_goal', models.PositiveIntegerField(blank=True, null=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('prefered', models.BooleanField(default=True, verbose_name='main profile')),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profiles', to=settings.AUTH_USER_MODEL)),
                ('faction', models.ForeignKey(default=0, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='trainer.Faction', verbose_name='team')),
            ],
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('xp', models.PositiveIntegerField(verbose_name='Total XP')),
                ('dex_caught', models.PositiveIntegerField(blank=True, null=True)),
                ('dex_seen', models.PositiveIntegerField(blank=True, null=True)),
                ('walk_dist', models.DecimalField(blank=True, decimal_places=1, max_digits=16, null=True)),
                ('gen_1_dex', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_caught', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_evolved', models.PositiveIntegerField(blank=True, null=True)),
                ('pkstops_spun', models.PositiveIntegerField(blank=True, null=True)),
                ('battles_won', models.PositiveIntegerField(blank=True, null=True)),
                ('gen_2_dex', models.PositiveIntegerField(blank=True, null=True)),
                ('berry_fed', models.PositiveIntegerField(blank=True, null=True)),
                ('gym_defended', models.PositiveIntegerField(blank=True, null=True)),
                ('eggs_hatched', models.PositiveIntegerField(blank=True, null=True)),
                ('big_magikarp', models.PositiveIntegerField(blank=True, null=True)),
                ('legacy_gym_trained', models.PositiveIntegerField(blank=True, null=True)),
                ('tiny_rattata', models.PositiveIntegerField(blank=True, null=True)),
                ('pikachu_caught', models.PositiveIntegerField(blank=True, null=True)),
                ('unown_alphabet', models.PositiveIntegerField(blank=True, null=True)),
                ('raids_completed', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_normal', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_flying', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_poison', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_ground', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_rock', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_bug', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_steel', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_fire', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_water', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_grass', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_electric', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_psychic', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_dark', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_fairy', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_fighting', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_ghost', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_ice', models.PositiveIntegerField(blank=True, null=True)),
                ('pkmn_dragon', models.PositiveIntegerField(blank=True, null=True)),
                ('gym_badges', models.PositiveIntegerField(blank=True, null=True)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.Trainer')),
            ],
        ),
        migrations.AddField(
            model_name='network',
            name='members',
            field=models.ManyToManyField(related_name='network_members', through='trainer.NetworkMember', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='network',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='discorduser',
            name='account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='discord_account', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='discordserver',
            name='members',
            field=models.ManyToManyField(related_name='discord_members', through='trainer.DiscordMember', to='trainer.DiscordUser'),
        ),
        migrations.AddField(
            model_name='discordserver',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trainer.DiscordUser'),
        ),
        migrations.AddField(
            model_name='discordmember',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.DiscordServer'),
        ),
        migrations.AddField(
            model_name='discordmember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.DiscordUser'),
        ),
        migrations.AddField(
            model_name='ban',
            name='discord',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trainer.DiscordServer'),
        ),
        migrations.AddField(
            model_name='ban',
            name='network',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='trainer.Network'),
        ),
        migrations.AddField(
            model_name='ban',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.DiscordUser'),
        ),
    ]
