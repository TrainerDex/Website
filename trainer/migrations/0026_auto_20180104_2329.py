# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-01-04 23:29
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.CITIES_CITY_MODEL),
        ('cities', '0010_adjust_unique_attributes'),
        migrations.swappable_dependency(settings.CITIES_COUNTRY_MODEL),
        ('trainer', '0025_update_meta_source'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlayZonesDetailCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_show_on_profile', models.BooleanField(default=True, verbose_name='Show on profile')),
                ('privacy_show_on_directory', models.BooleanField(default=True, verbose_name='Show in local directory')),
                ('subscribe_updates', models.BooleanField(default=False, verbose_name='Subscribe to updates')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.CITIES_CITY_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayZonesDetailCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_show_on_profile', models.BooleanField(default=True, verbose_name='Show on profile')),
                ('privacy_show_on_directory', models.BooleanField(default=True, verbose_name='Show in local directory')),
                ('subscribe_updates', models.BooleanField(default=False, verbose_name='Subscribe to updates')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.CITIES_COUNTRY_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayZonesDetailRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_show_on_profile', models.BooleanField(default=True, verbose_name='Show on profile')),
                ('privacy_show_on_directory', models.BooleanField(default=True, verbose_name='Show in local directory')),
                ('subscribe_updates', models.BooleanField(default=False, verbose_name='Subscribe to updates')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cities.Region')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PlayZonesDetailSubregion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_show_on_profile', models.BooleanField(default=True, verbose_name='Show on profile')),
                ('privacy_show_on_directory', models.BooleanField(default=True, verbose_name='Show in local directory')),
                ('subscribe_updates', models.BooleanField(default=False, verbose_name='Subscribe to updates')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cities.Subregion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='trainer',
            name='leaderboard_city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_trainers_city', to=settings.CITIES_CITY_MODEL, verbose_name='City'),
        ),
        migrations.AddField(
            model_name='trainer',
            name='leaderboard_country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_trainers_country', to=settings.CITIES_COUNTRY_MODEL, verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='trainer',
            name='leaderboard_region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_trainers_region', to='cities.Region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='trainer',
            name='leaderboard_subregion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leaderboard_trainers_subregion', to='cities.Subregion', verbose_name='Subregion'),
        ),
        migrations.AddField(
            model_name='playzonesdetailsubregion',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.Trainer'),
        ),
        migrations.AddField(
            model_name='playzonesdetailregion',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.Trainer'),
        ),
        migrations.AddField(
            model_name='playzonesdetailcountry',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.Trainer'),
        ),
        migrations.AddField(
            model_name='playzonesdetailcity',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.Trainer'),
        ),
        migrations.AddField(
            model_name='trainer',
            name='play_zones_city',
            field=models.ManyToManyField(blank=True, related_name='playzone_trainers_city', through='trainer.PlayZonesDetailCity', to=settings.CITIES_CITY_MODEL, verbose_name='City'),
        ),
        migrations.AddField(
            model_name='trainer',
            name='play_zones_country',
            field=models.ManyToManyField(blank=True, related_name='playzone_trainers_country', through='trainer.PlayZonesDetailCountry', to=settings.CITIES_COUNTRY_MODEL, verbose_name='Country'),
        ),
        migrations.AddField(
            model_name='trainer',
            name='play_zones_region',
            field=models.ManyToManyField(blank=True, related_name='playzone_trainers_region', through='trainer.PlayZonesDetailRegion', to='cities.Region', verbose_name='Region'),
        ),
        migrations.AddField(
            model_name='trainer',
            name='play_zones_subregion',
            field=models.ManyToManyField(blank=True, related_name='playzone_trainers_subregion', through='trainer.PlayZonesDetailSubregion', to='cities.Subregion', verbose_name='Subregion'),
        ),
    ]
