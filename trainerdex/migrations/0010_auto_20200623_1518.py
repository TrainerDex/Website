# Generated by Django 3.0.7 on 2020-06-23 15:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_auto_20200623_1518'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('trainerdex', '0009_auto_20200623_1317'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='evidence',
            options={'verbose_name': 'evidence', 'verbose_name_plural': 'evidence'},
        ),
        migrations.AlterModelOptions(
            name='faction',
            options={'verbose_name': 'teams'},
        ),
        migrations.AlterModelOptions(
            name='presettarget',
            options={'verbose_name': 'target (Preset)', 'verbose_name_plural': 'target (Preset)'},
        ),
        migrations.AlterModelOptions(
            name='presettargetgroup',
            options={'verbose_name': 'group of targets', 'verbose_name_plural': 'groups of targets'},
        ),
        migrations.AlterModelOptions(
            name='target',
            options={'ordering': ['stat', '_target'], 'verbose_name': 'target', 'verbose_name_plural': 'targets'},
        ),
        migrations.AlterModelOptions(
            name='trainer',
            options={'verbose_name': 'trainer', 'verbose_name_plural': 'trainers'},
        ),
        migrations.AlterModelOptions(
            name='trainercode',
            options={'verbose_name': 'Trainer Code', 'verbose_name_plural': 'Trainer Codes'},
        ),
        migrations.AlterModelOptions(
            name='update',
            options={'get_latest_by': 'update_time', 'ordering': ['-update_time'], 'verbose_name': 'update', 'verbose_name_plural': 'updates'},
        ),
        migrations.AlterField(
            model_name='evidence',
            name='content_type',
            field=models.ForeignKey(limit_choices_to=models.Q(('app_label', 'trainerdex'), ('model__in', ['trainer', 'update'])), on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='model'),
        ),
        migrations.AlterField(
            model_name='evidence',
            name='object_pk',
            field=models.CharField(max_length=36, verbose_name='object PK'),
        ),
        migrations.AlterField(
            model_name='evidenceimage',
            name='evidence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='trainerdex.Evidence', verbose_name='evidence'),
        ),
        migrations.AlterField(
            model_name='presettarget',
            name='_target',
            field=models.CharField(max_length=16, verbose_name='target'),
        ),
        migrations.AlterField(
            model_name='presettarget',
            name='stat',
            field=models.CharField(choices=[('total_xp', 'Total XP'), ('pokedex_total_caught', 'Unique Species Caught'), ('pokedex_total_seen', 'Unique Species Seen'), ('pokedex_gen1', 'Kanto'), ('pokedex_gen2', 'Johto'), ('pokedex_gen3', 'Hoenn'), ('pokedex_gen4', 'Sinnoh'), ('pokedex_gen5', 'Unova'), ('pokedex_gen6', 'Kalos'), ('pokedex_gen7', 'Alola'), ('pokedex_gen8', 'Galar'), ('travel_km', 'Jogger | Distance Walked'), ('capture_total', 'Collector | Pokémon Caught'), ('evolved_total', 'Scientist'), ('hatched_total', 'Breeder'), ('pokestops_visited', 'Backpacker | PokéStops Visited'), ('big_magikarp', 'Fisherman'), ('battle_attack_won', 'Battle Girl'), ('battle_training_won', 'Ace Trainer'), ('small_rattata', 'Youngster'), ('pikachu', 'Pikachu Fan'), ('unown', 'Unown'), ('raid_battle_won', 'Champion'), ('legendary_battle_won', 'Battle Legend'), ('berries_fed', 'Berry Master'), ('hours_defended', 'Gym Leader'), ('challenge_quests', 'Pokémon Ranger'), ('max_level_friends', 'Idol'), ('trading', 'Gentleman'), ('trading_distance', 'Pilot'), ('great_league', 'Great League Veteran'), ('ultra_league', 'Ultra League Veteran'), ('master_league', 'Master League Veteran'), ('photobomb', 'Cameraman'), ('pokemon_purified', 'Purifier'), ('rocket_grunts_defeated', 'Hero'), ('buddy_best', 'Best Buddy'), ('wayfarer', 'Wayfarer'), ('type_normal', 'Schoolkid'), ('type_fighting', 'Black Belt'), ('type_flying', 'Bird Keeper'), ('type_poison', 'Punk Girl'), ('type_ground', 'Ruin Maniac'), ('type_rock', 'Hiker'), ('type_bug', 'Bug Catcher'), ('type_ghost', 'Hex Maniac'), ('type_steel', 'Depot Agent'), ('type_fire', 'Kindler'), ('type_water', 'Swimmer'), ('type_grass', 'Gardener'), ('type_electric', 'Rocker'), ('type_psychic', 'Psychic'), ('type_ice', 'Skier'), ('type_dragon', 'Dragon Tamer'), ('type_dark', 'Delinquent'), ('type_fairy', 'Fairy Tale Girl'), ('gymbadges_total', 'Gym Badges'), ('gymbadges_gold', 'Gold Gym Badges')], max_length=22, verbose_name='stat'),
        ),
        migrations.AlterField(
            model_name='target',
            name='_target',
            field=models.CharField(max_length=16, verbose_name='target'),
        ),
        migrations.AlterField(
            model_name='target',
            name='name',
            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='target',
            name='stat',
            field=models.CharField(choices=[('total_xp', 'Total XP'), ('pokedex_total_caught', 'Unique Species Caught'), ('pokedex_total_seen', 'Unique Species Seen'), ('pokedex_gen1', 'Kanto'), ('pokedex_gen2', 'Johto'), ('pokedex_gen3', 'Hoenn'), ('pokedex_gen4', 'Sinnoh'), ('pokedex_gen5', 'Unova'), ('pokedex_gen6', 'Kalos'), ('pokedex_gen7', 'Alola'), ('pokedex_gen8', 'Galar'), ('travel_km', 'Jogger | Distance Walked'), ('capture_total', 'Collector | Pokémon Caught'), ('evolved_total', 'Scientist'), ('hatched_total', 'Breeder'), ('pokestops_visited', 'Backpacker | PokéStops Visited'), ('big_magikarp', 'Fisherman'), ('battle_attack_won', 'Battle Girl'), ('battle_training_won', 'Ace Trainer'), ('small_rattata', 'Youngster'), ('pikachu', 'Pikachu Fan'), ('unown', 'Unown'), ('raid_battle_won', 'Champion'), ('legendary_battle_won', 'Battle Legend'), ('berries_fed', 'Berry Master'), ('hours_defended', 'Gym Leader'), ('challenge_quests', 'Pokémon Ranger'), ('max_level_friends', 'Idol'), ('trading', 'Gentleman'), ('trading_distance', 'Pilot'), ('great_league', 'Great League Veteran'), ('ultra_league', 'Ultra League Veteran'), ('master_league', 'Master League Veteran'), ('photobomb', 'Cameraman'), ('pokemon_purified', 'Purifier'), ('rocket_grunts_defeated', 'Hero'), ('buddy_best', 'Best Buddy'), ('wayfarer', 'Wayfarer'), ('type_normal', 'Schoolkid'), ('type_fighting', 'Black Belt'), ('type_flying', 'Bird Keeper'), ('type_poison', 'Punk Girl'), ('type_ground', 'Ruin Maniac'), ('type_rock', 'Hiker'), ('type_bug', 'Bug Catcher'), ('type_ghost', 'Hex Maniac'), ('type_steel', 'Depot Agent'), ('type_fire', 'Kindler'), ('type_water', 'Swimmer'), ('type_grass', 'Gardener'), ('type_electric', 'Rocker'), ('type_psychic', 'Psychic'), ('type_ice', 'Skier'), ('type_dragon', 'Dragon Tamer'), ('type_dark', 'Delinquent'), ('type_fairy', 'Fairy Tale Girl'), ('gymbadges_total', 'Gym Badges'), ('gymbadges_gold', 'Gold Gym Badges')], max_length=22, verbose_name='stat'),
        ),
        migrations.AlterField(
            model_name='target',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainerdex.Trainer', verbose_name='trainer'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='faction',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.PROTECT, to='trainerdex.Faction', verbose_name='teams'),
        ),
        migrations.AlterField(
            model_name='trainer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='trainer', serialize=False, to='core.HumanUser', verbose_name='user'),
        ),
        migrations.AlterField(
            model_name='trainercode',
            name='code',
            field=models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator('(\\d{4}[\\s\\-]?){3}', 'Trainer Code must be 12 digits long and contain only numbers and whitespace.', 'invalid'), django.core.validators.MinLengthValidator(12), django.core.validators.MaxLengthValidator(15)], verbose_name='Trainer Code'),
        ),
        migrations.AlterField(
            model_name='trainercode',
            name='trainer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='trainer_code', serialize=False, to='trainerdex.Trainer', verbose_name='trainer'),
        ),
        migrations.AlterField(
            model_name='update',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainerdex.Trainer', verbose_name='trainer'),
        ),
    ]
